## Add all ground truth words in one variable
#ground_truth_all <- c(ground_truth_all, current_ground_truth_txt)
## read the tesseract text and count number of words line by line
tesseract_file <- readLines(paste("../data/tesseract/", current_file_name,".txt",sep="")) %>%
removePunctuation() %>%
removeNumbers()
tesseract_wc <- wordcount(tesseract_file)
## compare the number of words for ground-truth and tesseract texts, record the index of line that has uneven words
remove_indices <- NULL
if(length(ground_truth_wc) == length(tesseract_wc)){
for(word in 1:length(ground_truth_wc)){
if (is.na(ground_truth_wc[word]) | is.na(tesseract_wc[word])){
remove_indices <- c(remove_indices, word)
}
else if((ground_truth_wc[word]) != (tesseract_wc[word])){
remove_indices <- c(remove_indices, word)
}
}
}
## delete lines that has uneven words
ground_truth_file <- ground_truth_file[-remove_indices]
tesseract_file <- tesseract_file[-remove_indices]
## make copies of the new version ground-truth and tesseract texts
current_gt <- ground_truth_file
current_t <- tesseract_file
## delete all space in ground-truth and tesseract texts
current_ground_truth_txt <- gsub(" ", "", ground_truth_file)
current_tesseract_txt <- gsub(" ", "", tesseract_file)
## count number of characters
gt_txt_ch <- nchar(current_ground_truth_txt)
t_txt_ch <- nchar(current_tesseract_txt)
## compare the number of characters for ground-truth and tesseract texts,
## record the index of line that has uneven characters
h <- NULL
if(length(gt_txt_ch) == length(t_txt_ch)){
for(j in 1:length(gt_txt_ch)){
if (is.na(gt_txt_ch[j]) | is.na(t_txt_ch[j])){
h <- c(h, j)
}
else if((gt_txt_ch[j]) != (t_txt_ch[j])){
h <- c(h, j)
}
}
}
## delete lines that has uneven characters, now we get texts that can be used for detecting errors line by line
if(!(is.null(h))){
current_gt <- current_gt[-h]
current_t <- current_t[-h] }
nchar(current_gt)
nchar(current_t)
clean_groundtruth_txt[[i]] <- paste(current_gt, collapse = " ")
clean_tesseract_txt[[i]] <- paste(current_t, collapse = " ")
clean_ground_truth_txt_ch[[i]] <- gsub(" ", "", clean_groundtruth_txt)
clean_tesseract_txt_ch[[i]] <- gsub(" ", "", clean_tesseract_txt)
tesseract_vec <- str_split(clean_tesseract_txt," ")[[i]]
groundtruth_vec <- str_split(clean_groundtruth_txt," ")[[i]]
}
View(groundtruth_vec)
groundtruth_vec <-list()
tesseract_vec <- list()
matched_groundtruth <- list()
matched_tesseract <- list()
tesseract_vec <- list()
roundtruth_vec <- list()
clean_ground_truth_txt_ch <- list()
clean_tesseract_txt_ch <- list()
groundtruth_vec <-list()
tesseract_vec <- list()
for (i in 1:10){
### only process one of the files in the folder as an example, in your project, you need to use all the files
current_file_name <- sub(".txt","",file_name_vec[i])
## read the ground truth text and count number of words line by line
ground_truth_file <- readLines(paste("../data/ground_truth/", current_file_name, ".txt", sep="")) %>%
removePunctuation() %>%
removeNumbers()
ground_truth_wc <- wordcount(ground_truth_file)
## Add all ground truth words in one variable
#ground_truth_all <- c(ground_truth_all, current_ground_truth_txt)
## read the tesseract text and count number of words line by line
tesseract_file <- readLines(paste("../data/tesseract/", current_file_name,".txt",sep="")) %>%
removePunctuation() %>%
removeNumbers()
tesseract_wc <- wordcount(tesseract_file)
## compare the number of words for ground-truth and tesseract texts, record the index of line that has uneven words
remove_indices <- NULL
if(length(ground_truth_wc) == length(tesseract_wc)){
for(word in 1:length(ground_truth_wc)){
if (is.na(ground_truth_wc[word]) | is.na(tesseract_wc[word])){
remove_indices <- c(remove_indices, word)
}
else if((ground_truth_wc[word]) != (tesseract_wc[word])){
remove_indices <- c(remove_indices, word)
}
}
}
## delete lines that has uneven words
ground_truth_file <- ground_truth_file[-remove_indices]
tesseract_file <- tesseract_file[-remove_indices]
## make copies of the new version ground-truth and tesseract texts
current_gt <- ground_truth_file
current_t <- tesseract_file
## delete all space in ground-truth and tesseract texts
current_ground_truth_txt <- gsub(" ", "", ground_truth_file)
current_tesseract_txt <- gsub(" ", "", tesseract_file)
## count number of characters
gt_txt_ch <- nchar(current_ground_truth_txt)
t_txt_ch <- nchar(current_tesseract_txt)
## compare the number of characters for ground-truth and tesseract texts,
## record the index of line that has uneven characters
h <- NULL
if(length(gt_txt_ch) == length(t_txt_ch)){
for(j in 1:length(gt_txt_ch)){
if (is.na(gt_txt_ch[j]) | is.na(t_txt_ch[j])){
h <- c(h, j)
}
else if((gt_txt_ch[j]) != (t_txt_ch[j])){
h <- c(h, j)
}
}
}
## delete lines that has uneven characters, now we get texts that can be used for detecting errors line by line
if(!(is.null(h))){
current_gt <- current_gt[-h]
current_t <- current_t[-h] }
nchar(current_gt)
nchar(current_t)
clean_groundtruth_txt[[i]] <- paste(current_gt, collapse = " ")
clean_tesseract_txt[[i]] <- paste(current_t, collapse = " ")
clean_ground_truth_txt_ch[[i]] <- gsub(" ", "", clean_groundtruth_txt)
clean_tesseract_txt_ch[[i]] <- gsub(" ", "", clean_tesseract_txt)
tesseract_vec <- str_split(clean_tesseract_txt," ")[[i]]
groundtruth_vec <- str_split(clean_groundtruth_txt," ")[[i]]
}
matched_groundtruth <- list()
matched_tesseract <- list()
tesseract_vec <- list()
roundtruth_vec <- list()
clean_ground_truth_txt_ch <- list()
clean_tesseract_txt_ch <- list()
groundtruth_vec <-list()
tesseract_vec <- list()
for (i in 1:10){
### only process one of the files in the folder as an example, in your project, you need to use all the files
current_file_name <- sub(".txt","",file_name_vec[i])
## read the ground truth text and count number of words line by line
ground_truth_file <- readLines(paste("../data/ground_truth/", current_file_name, ".txt", sep="")) %>%
removePunctuation() %>%
removeNumbers()
ground_truth_wc <- wordcount(ground_truth_file)
## Add all ground truth words in one variable
#ground_truth_all <- c(ground_truth_all, current_ground_truth_txt)
## read the tesseract text and count number of words line by line
tesseract_file <- readLines(paste("../data/tesseract/", current_file_name,".txt",sep="")) %>%
removePunctuation() %>%
removeNumbers()
tesseract_wc <- wordcount(tesseract_file)
## compare the number of words for ground-truth and tesseract texts, record the index of line that has uneven words
remove_indices <- NULL
if(length(ground_truth_wc) == length(tesseract_wc)){
for(word in 1:length(ground_truth_wc)){
if (is.na(ground_truth_wc[word]) | is.na(tesseract_wc[word])){
remove_indices <- c(remove_indices, word)
}
else if((ground_truth_wc[word]) != (tesseract_wc[word])){
remove_indices <- c(remove_indices, word)
}
}
}
## delete lines that has uneven words
ground_truth_file <- ground_truth_file[-remove_indices]
tesseract_file <- tesseract_file[-remove_indices]
## make copies of the new version ground-truth and tesseract texts
current_gt <- ground_truth_file
current_t <- tesseract_file
## delete all space in ground-truth and tesseract texts
current_ground_truth_txt <- gsub(" ", "", ground_truth_file)
current_tesseract_txt <- gsub(" ", "", tesseract_file)
## count number of characters
gt_txt_ch <- nchar(current_ground_truth_txt)
t_txt_ch <- nchar(current_tesseract_txt)
## compare the number of characters for ground-truth and tesseract texts,
## record the index of line that has uneven characters
h <- NULL
if(length(gt_txt_ch) == length(t_txt_ch)){
for(j in 1:length(gt_txt_ch)){
if (is.na(gt_txt_ch[j]) | is.na(t_txt_ch[j])){
h <- c(h, j)
}
else if((gt_txt_ch[j]) != (t_txt_ch[j])){
h <- c(h, j)
}
}
}
## delete lines that has uneven characters, now we get texts that can be used for detecting errors line by line
if(!(is.null(h))){
current_gt <- current_gt[-h]
current_t <- current_t[-h] }
nchar(current_gt)
nchar(current_t)
clean_groundtruth_txt[[i]] <- paste(current_gt, collapse = " ")
clean_tesseract_txt[[i]] <- paste(current_t, collapse = " ")
clean_ground_truth_txt_ch[[i]] <- gsub(" ", "", clean_groundtruth_txt)
clean_tesseract_txt_ch[[i]] <- gsub(" ", "", clean_tesseract_txt)
tesseract_vec[[i]] <- str_split(clean_tesseract_txt," ")[[i]]
groundtruth_vec[[i]] <- str_split(clean_groundtruth_txt," ")[[i]]
}
df <- as.data.frame(tesseract_vec)
df <- unlist(tesseract_vec)
nrow(tesseract_vec)
nrow(tesseract_vec[[1]])
length(tesseract_vec[[1]])
length(tesseract_vec[[1]]) == length(groundtruth_vec[[1]])
length(tesseract_vec[[2]]) == length(groundtruth_vec[[2]])
length(tesseract_vec[[3]]) == length(groundtruth_vec[[3]])
j = 0
for (i in 1:10){
if(length(tesseract_vec[[i]]) == length(groundtruth_vec[[i]]))
j = j + 1 }
for (i in 1:50){
### only process one of the files in the folder as an example, in your project, you need to use all the files
current_file_name <- sub(".txt","",file_name_vec[i])
## read the ground truth text and count number of words line by line
ground_truth_file <- readLines(paste("../data/ground_truth/", current_file_name, ".txt", sep="")) %>%
removePunctuation() %>%
removeNumbers()
ground_truth_wc <- wordcount(ground_truth_file)
## Add all ground truth words in one variable
#ground_truth_all <- c(ground_truth_all, current_ground_truth_txt)
## read the tesseract text and count number of words line by line
tesseract_file <- readLines(paste("../data/tesseract/", current_file_name,".txt",sep="")) %>%
removePunctuation() %>%
removeNumbers()
tesseract_wc <- wordcount(tesseract_file)
## compare the number of words for ground-truth and tesseract texts, record the index of line that has uneven words
remove_indices <- NULL
if(length(ground_truth_wc) == length(tesseract_wc)){
for(word in 1:length(ground_truth_wc)){
if (is.na(ground_truth_wc[word]) | is.na(tesseract_wc[word])){
remove_indices <- c(remove_indices, word)
}
else if((ground_truth_wc[word]) != (tesseract_wc[word])){
remove_indices <- c(remove_indices, word)
}
}
}
## delete lines that has uneven words
ground_truth_file <- ground_truth_file[-remove_indices]
tesseract_file <- tesseract_file[-remove_indices]
## make copies of the new version ground-truth and tesseract texts
current_gt <- ground_truth_file
current_t <- tesseract_file
## delete all space in ground-truth and tesseract texts
current_ground_truth_txt <- gsub(" ", "", ground_truth_file)
current_tesseract_txt <- gsub(" ", "", tesseract_file)
## count number of characters
gt_txt_ch <- nchar(current_ground_truth_txt)
t_txt_ch <- nchar(current_tesseract_txt)
## compare the number of characters for ground-truth and tesseract texts,
## record the index of line that has uneven characters
h <- NULL
if(length(gt_txt_ch) == length(t_txt_ch)){
for(j in 1:length(gt_txt_ch)){
if (is.na(gt_txt_ch[j]) | is.na(t_txt_ch[j])){
h <- c(h, j)
}
else if((gt_txt_ch[j]) != (t_txt_ch[j])){
h <- c(h, j)
}
}
}
## delete lines that has uneven characters, now we get texts that can be used for detecting errors line by line
if(!(is.null(h))){
current_gt <- current_gt[-h]
current_t <- current_t[-h] }
nchar(current_gt)
nchar(current_t)
clean_groundtruth_txt[[i]] <- paste(current_gt, collapse = " ")
clean_tesseract_txt[[i]] <- paste(current_t, collapse = " ")
clean_ground_truth_txt_ch[[i]] <- gsub(" ", "", clean_groundtruth_txt)
clean_tesseract_txt_ch[[i]] <- gsub(" ", "", clean_tesseract_txt)
tesseract_vec[[i]] <- str_split(clean_tesseract_txt," ")[[i]]
groundtruth_vec[[i]] <- str_split(clean_groundtruth_txt," ")[[i]]
}
matched_groundtruth <- list()
matched_tesseract <- list()
tesseract_vec <- list()
roundtruth_vec <- list()
clean_ground_truth_txt_ch <- list()
clean_tesseract_txt_ch <- list()
groundtruth_vec <-list()
tesseract_vec <- list()
for (i in 1:50){
### only process one of the files in the folder as an example, in your project, you need to use all the files
current_file_name <- sub(".txt","",file_name_vec[i])
## read the ground truth text and count number of words line by line
ground_truth_file <- readLines(paste("../data/ground_truth/", current_file_name, ".txt", sep="")) %>%
removePunctuation() %>%
removeNumbers()
ground_truth_wc <- wordcount(ground_truth_file)
## Add all ground truth words in one variable
#ground_truth_all <- c(ground_truth_all, current_ground_truth_txt)
## read the tesseract text and count number of words line by line
tesseract_file <- readLines(paste("../data/tesseract/", current_file_name,".txt",sep="")) %>%
removePunctuation() %>%
removeNumbers()
tesseract_wc <- wordcount(tesseract_file)
## compare the number of words for ground-truth and tesseract texts, record the index of line that has uneven words
remove_indices <- NULL
if(length(ground_truth_wc) == length(tesseract_wc)){
for(word in 1:length(ground_truth_wc)){
if (is.na(ground_truth_wc[word]) | is.na(tesseract_wc[word])){
remove_indices <- c(remove_indices, word)
}
else if((ground_truth_wc[word]) != (tesseract_wc[word])){
remove_indices <- c(remove_indices, word)
}
}
}
## delete lines that has uneven words
ground_truth_file <- ground_truth_file[-remove_indices]
tesseract_file <- tesseract_file[-remove_indices]
## make copies of the new version ground-truth and tesseract texts
current_gt <- ground_truth_file
current_t <- tesseract_file
## delete all space in ground-truth and tesseract texts
current_ground_truth_txt <- gsub(" ", "", ground_truth_file)
current_tesseract_txt <- gsub(" ", "", tesseract_file)
## count number of characters
gt_txt_ch <- nchar(current_ground_truth_txt)
t_txt_ch <- nchar(current_tesseract_txt)
## compare the number of characters for ground-truth and tesseract texts,
## record the index of line that has uneven characters
h <- NULL
if(length(gt_txt_ch) == length(t_txt_ch)){
for(j in 1:length(gt_txt_ch)){
if (is.na(gt_txt_ch[j]) | is.na(t_txt_ch[j])){
h <- c(h, j)
}
else if((gt_txt_ch[j]) != (t_txt_ch[j])){
h <- c(h, j)
}
}
}
## delete lines that has uneven characters, now we get texts that can be used for detecting errors line by line
if(!(is.null(h))){
current_gt <- current_gt[-h]
current_t <- current_t[-h] }
nchar(current_gt)
nchar(current_t)
clean_groundtruth_txt[[i]] <- paste(current_gt, collapse = " ")
clean_tesseract_txt[[i]] <- paste(current_t, collapse = " ")
clean_ground_truth_txt_ch[[i]] <- gsub(" ", "", clean_groundtruth_txt)
clean_tesseract_txt_ch[[i]] <- gsub(" ", "", clean_tesseract_txt)
tesseract_vec[[i]] <- str_split(clean_tesseract_txt," ")[[i]]
groundtruth_vec[[i]] <- str_split(clean_groundtruth_txt," ")[[i]]
}
for (i in 1:50){
if(length(tesseract_vec[[i]]) == length(groundtruth_vec[[i]]))
j = j + 1 }
j = 0
for (i in 1:50){
if(length(tesseract_vec[[i]]) == length(groundtruth_vec[[i]]))
j = j + 1 }
j = 0
for (i in 1:100){
### only process one of the files in the folder as an example, in your project, you need to use all the files
current_file_name <- sub(".txt","",file_name_vec[i])
## read the ground truth text and count number of words line by line
ground_truth_file <- readLines(paste("../data/ground_truth/", current_file_name, ".txt", sep="")) %>%
removePunctuation() %>%
removeNumbers()
ground_truth_wc <- wordcount(ground_truth_file)
## Add all ground truth words in one variable
#ground_truth_all <- c(ground_truth_all, current_ground_truth_txt)
## read the tesseract text and count number of words line by line
tesseract_file <- readLines(paste("../data/tesseract/", current_file_name,".txt",sep="")) %>%
removePunctuation() %>%
removeNumbers()
tesseract_wc <- wordcount(tesseract_file)
## compare the number of words for ground-truth and tesseract texts, record the index of line that has uneven words
remove_indices <- NULL
if(length(ground_truth_wc) == length(tesseract_wc)){
for(word in 1:length(ground_truth_wc)){
if (is.na(ground_truth_wc[word]) | is.na(tesseract_wc[word])){
remove_indices <- c(remove_indices, word)
}
else if((ground_truth_wc[word]) != (tesseract_wc[word])){
remove_indices <- c(remove_indices, word)
}
}
}
## delete lines that has uneven words
ground_truth_file <- ground_truth_file[-remove_indices]
tesseract_file <- tesseract_file[-remove_indices]
## make copies of the new version ground-truth and tesseract texts
current_gt <- ground_truth_file
current_t <- tesseract_file
## delete all space in ground-truth and tesseract texts
current_ground_truth_txt <- gsub(" ", "", ground_truth_file)
current_tesseract_txt <- gsub(" ", "", tesseract_file)
## count number of characters
gt_txt_ch <- nchar(current_ground_truth_txt)
t_txt_ch <- nchar(current_tesseract_txt)
## compare the number of characters for ground-truth and tesseract texts,
## record the index of line that has uneven characters
h <- NULL
if(length(gt_txt_ch) == length(t_txt_ch)){
for(j in 1:length(gt_txt_ch)){
if (is.na(gt_txt_ch[j]) | is.na(t_txt_ch[j])){
h <- c(h, j)
}
else if((gt_txt_ch[j]) != (t_txt_ch[j])){
h <- c(h, j)
}
}
}
## delete lines that has uneven characters, now we get texts that can be used for detecting errors line by line
if(!(is.null(h))){
current_gt <- current_gt[-h]
current_t <- current_t[-h] }
nchar(current_gt)
nchar(current_t)
clean_groundtruth_txt[[i]] <- paste(current_gt, collapse = " ")
clean_tesseract_txt[[i]] <- paste(current_t, collapse = " ")
clean_ground_truth_txt_ch[[i]] <- gsub(" ", "", clean_groundtruth_txt)
clean_tesseract_txt_ch[[i]] <- gsub(" ", "", clean_tesseract_txt)
tesseract_vec[[i]] <- str_split(clean_tesseract_txt," ")[[i]]
groundtruth_vec[[i]] <- str_split(clean_groundtruth_txt," ")[[i]]
}
for (i in 1:99){
if(length(tesseract_vec[[i]]) == length(groundtruth_vec[[i]]))
j = j + 1 }
j
j = 0
for (i in 1:99){
if(length(tesseract_vec[[i]]) == length(groundtruth_vec[[i]]))
j = j + 1 }
j
fin <- list()
for (i in 1:99){
}
fin
for (i in 1:99){
if(length(tesseract_vec[[i]]) == length(groundtruth_vec[[i]]))
print(i) }
for (i in 1:99){
if(length(tesseract_vec[[i]]) == length(groundtruth_vec[[i]]))
fin <- c(fin, i) }
fin
unlist(fin)
for(i in fin){
out <- c(out, tesseract_vec[[i]])
out <- c(out, groundtruth_vec[[i]])
}
out <- list()
for(i in fin){
out <- c(out, tesseract_vec[[i]])
out <- c(out, groundtruth_vec[[i]])
}
tesseract_vec[1]
tesseract_vec[2]
fin <- list()
for (i in 1:99){
if(length(tesseract_vec[i]) == length(groundtruth_vec[i]))
fin <- c(fin, i) }
fin
length(fin)
length(groundtruth_vec[2])
length(tesseract_vec[[1]]
)
length(tesseract_vec[[5]]
)
tesseract_vec[1]
out <- list()
for(i in fin){
out <- c(out, tesseract_vec[i])
out <- c(out, groundtruth_vec[i])
}
View(out)
out_c <- list()
out_t <- list()
for(i in fin){
out_c <- c(out, tesseract_vec[i])
out_t <- c(out, groundtruth_vec[i])
}
out_c <- list()
out_t <- list()
for(i in fin){
out_c <- c(out_c, tesseract_vec[i])
out_t <- c(out_t, groundtruth_vec[i])
}
fin <- list()
for (i in 1:99){
if(length(tesseract_vec[[i]]) == length(groundtruth_vec[[i]]))
fin <- c(fin, i) }
fin
out_c <- list()
out_t <- list()
for(i in fin){
out_c <- c(out_c, tesseract_vec[i])
out_t <- c(out_t, groundtruth_vec[i])
}
write.csv(out_c, 'clean.csv')
cbind(out_c, out_t)
cc <- cbind(out_c, out_t)
View(cc)
cc[[1]]
unlist(out_c)
#fit SVM
ffff <- cbind(unlist(out_c), unlist(out_t))
View(ffff)
write.csv(ffff, 'matched_pairs')
